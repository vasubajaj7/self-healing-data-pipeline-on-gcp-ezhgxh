[pytest]
testpaths = unit integration e2e performance
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    unit: Unit tests that validate individual components in isolation
    integration: Integration tests that validate component interactions
    e2e: End-to-end tests that validate complete workflows
    performance: Performance tests that validate system performance
    slow: Tests that take longer than average to execute
    gcp: Tests that interact with Google Cloud Platform services
    bigquery: Tests specific to BigQuery functionality
    composer: Tests specific to Cloud Composer functionality
    quality: Tests for data quality validation components
    healing: Tests for self-healing AI components
    monitoring: Tests for monitoring and alerting components
    optimization: Tests for performance optimization components

addopts = --strict-markers --cov=src/backend --cov-report=term --cov-report=xml --cov-report=html
xfail_strict = true

log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format = %Y-%m-%d %H:%M:%S

timeout = 300
timeout_method = thread
junit_family = xunit2

filterwarnings =
    ignore::DeprecationWarning:google.cloud
    ignore::DeprecationWarning:tensorflow
    ignore::UserWarning:great_expectations

env =
    PYTHONPATH=../
    TEST_ENV=development