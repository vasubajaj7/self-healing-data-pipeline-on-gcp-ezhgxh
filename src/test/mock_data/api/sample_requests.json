{
  "source_system_create_request": {
    "source_name": "customer_database",
    "source_type": "Cloud SQL",
    "connection_details": {
      "instance_name": "customer-db-instance",
      "database_name": "customers",
      "username": "service-account",
      "region": "us-central1"
    },
    "schema_version": "1.0",
    "extraction_method": "INCREMENTAL",
    "extraction_configuration": {
      "incremental_column": "updated_at",
      "batch_size": 1000,
      "max_parallel_extractions": 5
    },
    "metadata": {
      "owner": "data_team",
      "description": "Customer database containing core customer data",
      "criticality": "HIGH"
    }
  },
  
  "source_system_update_request": {
    "source_id": "src_1234567890",
    "connection_details": {
      "instance_name": "customer-db-instance",
      "database_name": "customers_v2",
      "username": "service-account",
      "region": "us-central1"
    },
    "schema_version": "1.1",
    "extraction_configuration": {
      "incremental_column": "last_modified_at",
      "batch_size": 2000,
      "max_parallel_extractions": 8
    },
    "metadata": {
      "owner": "data_engineering",
      "description": "Updated customer database with new schema"
    }
  },
  
  "source_system_test_request": {
    "source_id": "src_1234567890",
    "test_type": "CONNECTION",
    "timeout_seconds": 30,
    "validate_schema": true,
    "test_query": "SELECT COUNT(*) FROM customers LIMIT 1"
  },
  
  "pipeline_create_request": {
    "pipeline_name": "customer_data_pipeline",
    "source_id": "src_1234567890",
    "target_dataset": "customer_data",
    "target_table": "customer_profile",
    "scheduling": {
      "schedule_type": "CRON",
      "cron_expression": "0 2 * * *",
      "time_zone": "UTC"
    },
    "transformation_steps": [
      {
        "step_name": "remove_sensitive_data",
        "step_type": "SQL_TRANSFORM",
        "sql_query": "SELECT id, name, city, state, zip_code, signup_date FROM customer_temp WHERE status = 'ACTIVE'"
      },
      {
        "step_name": "normalize_addresses",
        "step_type": "PYTHON_TRANSFORM",
        "function_name": "normalize_address_data",
        "parameters": {
          "address_column": "address",
          "output_columns": ["street", "city", "state", "zip_code"]
        }
      }
    ],
    "quality_validation": {
      "validation_dataset": "customer_data_quality",
      "rule_ids": ["rule_001", "rule_002", "rule_003"],
      "threshold": 95.0,
      "on_failure": "STOP_PIPELINE"
    }
  },
  
  "pipeline_update_request": {
    "pipeline_id": "pipe_abcdefghij",
    "target_dataset": "customer_data",
    "target_table": "customer_profile_v2",
    "scheduling": {
      "schedule_type": "CRON",
      "cron_expression": "0 4 * * *",
      "time_zone": "UTC"
    },
    "transformation_steps": [
      {
        "step_name": "remove_sensitive_data",
        "step_type": "SQL_TRANSFORM",
        "sql_query": "SELECT id, name, city, state, zip_code, signup_date, last_order_date FROM customer_temp WHERE status = 'ACTIVE'"
      }
    ],
    "quality_validation": {
      "validation_dataset": "customer_data_quality",
      "rule_ids": ["rule_001", "rule_002", "rule_003", "rule_004"],
      "threshold": 98.0,
      "on_failure": "CONTINUE_WITH_ERRORS"
    }
  },
  
  "pipeline_execution_request": {
    "pipeline_id": "pipe_abcdefghij",
    "execution_mode": "MANUAL",
    "execution_parameters": {
      "start_date": "2023-06-15T00:00:00Z",
      "end_date": "2023-06-16T00:00:00Z",
      "force_full_load": false
    },
    "notification_settings": {
      "notify_on_completion": true,
      "notification_channels": ["email", "teams"]
    }
  },
  
  "quality_rule_create_request": {
    "rule_name": "customer_email_format",
    "rule_type": "REGEX_PATTERN",
    "target_dataset": "customer_data",
    "target_table": "customer_profile",
    "target_column": "email",
    "expectation_type": "expect_column_values_to_match_regex",
    "parameters": {
      "regex": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    },
    "severity": "HIGH",
    "description": "Ensures customer email addresses follow standard email format"
  },
  
  "quality_rule_update_request": {
    "rule_id": "rule_xyz123",
    "expectation_type": "expect_column_values_to_match_regex",
    "parameters": {
      "regex": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "mostly": 0.99
    },
    "severity": "MEDIUM",
    "description": "Updated rule for email address format validation with 99% threshold"
  },
  
  "validation_request": {
    "dataset": "customer_data",
    "table": "customer_profile",
    "rule_ids": ["rule_001", "rule_002", "rule_003"],
    "sample_size": 1000,
    "validation_mode": "FULL",
    "return_results": true,
    "execution_id": "exec_12345abcde"
  },
  
  "healing_action_create_request": {
    "action_name": "email_format_fixer",
    "action_type": "DATA_CORRECTION",
    "pattern_id": "pattern_abc123",
    "description": "Fixes common email format issues",
    "action_definition": {
      "correction_type": "REGEX_REPLACE",
      "target_column": "email",
      "patterns": [
        {
          "find": "\\s+@",
          "replace": "@"
        },
        {
          "find": "@\\s+",
          "replace": "@"
        }
      ],
      "fallback_action": "NULL_VALUE"
    },
    "confidence_threshold": 80.0,
    "approval_required": false
  },
  
  "healing_action_update_request": {
    "action_id": "action_123xyz",
    "action_name": "enhanced_email_fixer",
    "description": "Enhanced version with additional patterns",
    "action_definition": {
      "correction_type": "REGEX_REPLACE",
      "target_column": "email",
      "patterns": [
        {
          "find": "\\s+@",
          "replace": "@"
        },
        {
          "find": "@\\s+",
          "replace": "@"
        },
        {
          "find": "\\.\\.",
          "replace": "."
        }
      ],
      "fallback_action": "ORIGINAL_VALUE"
    },
    "confidence_threshold": 85.0,
    "approval_required": true
  },
  
  "manual_healing_request": {
    "execution_id": "exec_12345abcde",
    "validation_id": "val_0987654321",
    "healing_actions": [
      {
        "action_id": "action_123xyz",
        "parameters": {
          "target_column": "email",
          "custom_pattern": "\\s+",
          "custom_replace": ""
        }
      }
    ],
    "notes": "Manual healing for email format issues in recent import",
    "post_healing_validation": true
  },
  
  "issue_pattern_create_request": {
    "pattern_name": "Null Values in Required Fields",
    "issue_type": "DATA_QUALITY",
    "detection_pattern": {
      "pattern_type": "RULE_FAILURE",
      "rule_types": ["expect_column_values_to_not_be_null"],
      "min_occurrence": 5,
      "time_window_minutes": 60
    },
    "confidence_threshold": 90.0,
    "description": "Pattern to detect systematic null values in required fields"
  },
  
  "issue_pattern_update_request": {
    "pattern_id": "pattern_abc123",
    "detection_pattern": {
      "pattern_type": "RULE_FAILURE",
      "rule_types": ["expect_column_values_to_not_be_null"],
      "min_occurrence": 10,
      "time_window_minutes": 120,
      "additional_filters": {
        "severity": ["HIGH", "CRITICAL"]
      }
    },
    "confidence_threshold": 85.0,
    "description": "Updated pattern with severity filtering and adjusted thresholds"
  },
  
  "alert_config_update_request": {
    "alert_type": "QUALITY_FAILURE",
    "notification_channels": {
      "teams": {
        "enabled": true,
        "webhook_url": "https://outlook.office.com/webhook/example",
        "notify_on_recovery": true
      },
      "email": {
        "enabled": true,
        "recipients": ["data-team@example.com", "operations@example.com"],
        "include_details": true
      }
    },
    "alert_severity_mapping": {
      "CRITICAL": "P1",
      "HIGH": "P2",
      "MEDIUM": "P3",
      "LOW": "P4"
    },
    "grouping_settings": {
      "group_by": ["pipeline_id", "rule_type"],
      "group_window_minutes": 15
    }
  },
  
  "alert_acknowledge_request": {
    "alert_id": "alert_12345abcde",
    "acknowledged_by": "user@example.com",
    "notes": "Investigating data quality issues in customer import",
    "status_update": "IN_PROGRESS",
    "expected_resolution_time": "2023-06-15T15:00:00Z"
  },
  
  "optimization_config_update_request": {
    "optimization_type": "QUERY_PERFORMANCE",
    "enabled": true,
    "scan_frequency": "DAILY",
    "thresholds": {
      "query_runtime_increase_percent": 20,
      "data_scanned_increase_percent": 30,
      "slot_utilization_threshold": 80
    },
    "auto_implementation": {
      "enabled": true,
      "confidence_threshold": 90,
      "require_approval_above_cost": 500
    }
  },
  
  "optimization_implementation_request": {
    "optimization_id": "opt_1234567890",
    "implementation_mode": "AUTOMATIC",
    "schedule_time": "2023-06-20T02:00:00Z",
    "approver": "data-admin@example.com",
    "notes": "Implementing partitioning optimization for customer_orders table"
  },
  
  "pagination_request": {
    "page": 1,
    "page_size": 50,
    "return_total": true
  },
  
  "date_range_request": {
    "start_date": "2023-06-01T00:00:00Z",
    "end_date": "2023-06-15T23:59:59Z",
    "timezone": "UTC"
  },
  
  "filter_request": {
    "filters": [
      {
        "field": "status",
        "operator": "eq",
        "value": "FAILED"
      },
      {
        "field": "creation_date",
        "operator": "gte",
        "value": "2023-06-01T00:00:00Z"
      },
      {
        "field": "pipeline_name",
        "operator": "contains",
        "value": "customer"
      }
    ],
    "combination_operator": "AND"
  },
  
  "sort_request": {
    "sort_by": "execution_time",
    "direction": "DESC",
    "secondary_sort": {
      "sort_by": "status",
      "direction": "ASC"
    }
  },
  
  "auth_request": {
    "client_id": "client_12345abcde",
    "client_secret": "secret_xyz98765",
    "grant_type": "client_credentials",
    "scope": "api:read api:write"
  },
  
  "invalid_request": {
    "source_id": "invalid-format-id",
    "invalid_field": "This field doesn't exist",
    "connection_details": {
      "missing_required_field": true,
      "malformed_json": "{this is not valid json"
    }
  }
}